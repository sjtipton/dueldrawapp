<!DOCTYPE html>
<html xmlns:fb="http://ogp.me/ns/fb#" lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes" />

    <title><%= @app['name'] %></title>
    <link rel="stylesheet" href="stylesheets/screen.css" media="Screen" type="text/css" />
    <link rel="stylesheet" href="stylesheets/mobile.css" media="handheld, only screen and (max-width: 480px), only screen and (max-device-width: 480px)" type="text/css" />

    <!--[if IEMobile]>
    <link rel="stylesheet" href="mobile.css" media="screen" type="text/css"  />
    <![endif]-->

    <!-- These are Open Graph tags.  They add meta data to your  -->
    <!-- site that facebook uses when your content is shared     -->
    <!-- over facebook.  You should fill these tags in with      -->
    <!-- your data.  To learn more about Open Graph, visit       -->
    <!-- 'https://developers.facebook.com/docs/opengraph/'       -->
    <meta property="og:title" content="<%= @app['name'] %>" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="<%= url %>" />
    <meta property="og:image" content="<%= url('/logo.png') %>" />
    <meta property="og:site_name" content="<%= @app['name'] %>" />
    <meta property="og:description" content="My First App" />
    <meta property="fb:app_id" content="<%= @app['name'] %>" />

    <script type="text/javascript" src="/javascripts/jquery-1.7.1.min.js"></script>

    <script type="text/javascript">
      function logResponse(response) {
        if (console && console.log) {
          console.log('The response was', response);
        }
      }

      $(function(){
        // Set up so we handle click on the buttons
        $('#postToWall').click(function() {
          FB.ui(
            {
              method : 'feed',
              link   : $(this).attr('data-url')
            },
            function (response) {
              // If response is null the user canceled the dialog
              if (response != null) {
                logResponse(response);
              }
            }
          );
        });

        $('#sendToFriends').click(function() {
          FB.ui(
            {
              method : 'send',
              link   : $(this).attr('data-url')
            },
            function (response) {
              // If response is null the user canceled the dialog
              if (response != null) {
                logResponse(response);
              }
            }
          );
        });

        $('#sendRequest').click(function() {
          FB.ui(
            {
              method  : 'apprequests',
              message : $(this).attr('data-message')
            },
            function (response) {
              // If response is null the user canceled the dialog
              if (response != null) {
                logResponse(response);
              }
            }
          );
        });
      });
    </script>

    <script type="text/javascript" src="https://raw.github.com/paperjs/paper.js/master/dist/paper.js"></script>
    <script type="text/javascript" src="https://raw.github.com/jashkenas/coffee-script/master/extras/coffee-script.js"></script>

    <!--[if IE]>
      <script type="text/javascript">
        var tags = ['header', 'section'];
        while(tags.length)
          document.createElement(tags.pop());
      </script>
    <![endif]-->
  </head>
  <body>
    <div id="fb-root"></div>
    <script type="text/javascript">
      window.fbAsyncInit = function() {
        FB.init({
          appId      : "<%= @app['id'] %>",                     // App ID
          channelUrl : "<%= url_no_scheme('/channel.html') %>", // Channel File
          status     : true,                                    // check login status
          cookie     : true,                                    // enable cookies to allow the server to access the session
          xfbml      : true                                     // parse XFBML
        });

        // Listen to the auth.login which will be called when the user logs in
        // using the Login button
        FB.Event.subscribe('auth.login', function(response) {
          // We want to reload the page now so Ruby can read the cookie that the
          // Javascript SDK sat. But we don't want to use
          // window.location.reload() because if this is in a canvas there was a
          // post made to this page and a reload will trigger a message to the
          // user asking if they want to send data again.
          window.location = window.location;
        });

        FB.Canvas.setAutoGrow();
      };

      // Load the SDK Asynchronously
      (function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/all.js";
        fjs.parentNode.insertBefore(js, fjs);
      }(document, 'script', 'facebook-jssdk'));
    </script>

    <header class="clearfix">
      <% if @user %>
          <p id="picture" style="background-image: url(https://graph.facebook.com/<%= @user['id'] %>/picture?type=normal)"></p>
          <div class="welcome">
            <h1>Welcome, <strong><%= @user['name'] %></strong></h1>
            <div id="facebook-sharing-actions">
              <ul>
                <li>
                  <a href="#" class="facebook-button" id="postToWall" data-url="<%= url %>">
                    <span class="plus">Post to Wall</span>
                  </a>
                </li>
                <li>
                  <a href="#" class="facebook-button speech-bubble" id="sendToFriends" data-url="<%= url %>">
                    <span class="speech-bubble">Send Message</span>
                  </a>
                </li>
                <li>
                  <a href="#" class="facebook-button apprequests" id="sendRequest" data-message="Test this awesome app">
                    <span class="apprequests">Send Requests</span>
                  </a>
                </li>
              </ul>
            </div>
          </div>
          <div id="samples">
            <div class="list">
              <h3>Fellow DuelDrawers</h3>
              <ul class="friends">
                <% @friends_using_app.each do |friend_result| %>
                  <li>
                    <a href="#" onclick="window.open('http://www.facebook.com/<%= friend_result['uid'] %>')">
                      <img src="<%= friend_result['pic_square'] %>" alt="<%= friend_result['name'] %>" title="<%= friend_result['name'] %>" />
                    </a>
                  </li>
                <% end %>
              </ul>
            </div>
            <div class="list">
              <h3>A handful of your friends</h3>
              <ul class="friends">
                <% @friends.each do |friend| %>
                  <li>
                    <a href="#" onclick="window.open('http://www.facebook.com/<%= friend['id']%>')">
                      <img src="https://graph.facebook.com/<%= friend['id'] %>/picture?type=square" alt="<%= friend['name'] %>"
                        title="<%= friend['name'] %>" />
                    </a>
                  </li>
                <% end %>
              </ul>
            </div>
          </div>
      <% else %>
        <div class="welcome-no-session">
          <h1>Welcome
            <a href='/auth/facebook' class="fb_button fb_button_medium">
              <span class="fb_button_text">Log In</span>
            </a>
          </h1>
        </div>

      <% end %>
    </header>

    <section id="get-started">
      <div class="paperscript split">
        <script type="text/paperscript" canvas="canvas-1">
        // Create a new path once, when the script is executed:
        tool.minDastance = 10;
        var path;
        //var myPath = new Path();
        //myPath.strokeColor = 'black';

        // This function is called whenever the user
        // clicks the mouse in the view:
        function onMouseDown(event) {
            // If the path is empty, we need to add two segments
            // to the path. The first one will stay put,
            // and the second one will be moved while dragging.
            //if (myPath.segments.length == 0) {
            //    myPath.add(event.point);
            //}

            // Add a segment to the path at the position of the mouse:
            //myPath.add(event.point);
            // Create a new path and give it a stroke color:
            path = new Path();
            path.strokeColor = '#000000';

            // Add a segment to the path where you clicked:
            path.add(event.point);
        }

        function onMouseDrag(event) {
            // Move the last segment point of the path to the
            // current position of the mouse:
            //myPath.lastSegment.point = event.point;
            // Every drag event, add a segment
            // to the path at the position of the mouse:
            path.add(event.point);
        }
        </script>
        <!--<script type='text/coffeescript' src="javascripts/hello.coffee" canvas="canvas-1"></script>-->
        <div class="canvas">
          <canvas height="310" width="708" style="background:#e4e1e1" id="canvas-1">
        </div>

      </div>
      <% if @user %>
        <div class="submit-drawing">
          <p>Don't be shy! Share your masterpiece with your DuelDraw friends!</p>
          <a href="#" class="button green" target="_self">Submit</a>
        </div>
      <% end %>
    </section>
  </body>
</html>